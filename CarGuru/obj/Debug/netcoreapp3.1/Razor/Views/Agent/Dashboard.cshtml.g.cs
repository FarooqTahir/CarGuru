#pragma checksum "C:\Users\Zahid\source\repos\CarGuru\CarGuru\Views\Agent\Dashboard.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "6b98de06a146c15d414d5acd793e993f90bcc5a3"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Agent_Dashboard), @"mvc.1.0.view", @"/Views/Agent/Dashboard.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Zahid\source\repos\CarGuru\CarGuru\Views\_ViewImports.cshtml"
using CarGuru;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Zahid\source\repos\CarGuru\CarGuru\Views\_ViewImports.cshtml"
using CarGuru.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6b98de06a146c15d414d5acd793e993f90bcc5a3", @"/Views/Agent/Dashboard.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4e6a444c5013a2caa2b0f73ecf9ecf67a7be6ad3", @"/Views/_ViewImports.cshtml")]
    public class Views_Agent_Dashboard : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", "~/Views/Agent/_AgentDashboard.cshtml", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "C:\Users\Zahid\source\repos\CarGuru\CarGuru\Views\Agent\Dashboard.cshtml"
  
    ViewData["Title"] = "Dashboard";
    var role = x.GetUserRoleId();
    Layout = CommonData.GetUserLayoutByRoleId(role);// "~/Views/Shared/_LayoutCallCenter.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
    <script>


        $('#daterange-btn').daterangepicker(
            {
                ranges: {
                    'Daily': [moment(), moment()],
                    'Weekly': [moment().subtract(6, 'days'), moment()],
                    'Monthly': [moment().startOf('month'), moment().endOf('month')]
                },
                startDate: moment().subtract(29, 'days'),
                endDate: moment()
            },
            function (start, end) {
              
                ApplyAnalyticsFilter(start.format('YYYY-MM-DD'),end.format('YYYY-MM-DD'))
                $('#reportrange span').html(start.format('MMMM D, YYYY') + ' - ' + end.format('MMMM D, YYYY'))
            }
        )



        //$(function () {




        //    //-------------
        //    //- BAR CHART -
        //    //-------------

        //    var barChartLeadData = {
        //        labels: ['Total Lead'],
        //        datasets: [
        //            {
        //         ");
                WriteLiteral(@"       label: 'Quotation',
        //                backgroundColor: 'rgba(105,205,250,0.7)',
        //                borderColor: 'rgba(60,141,188,0.8)',
        //                pointRadius: false,
        //                pointColor: '#3b8bba',
        //                pointStrokeColor: 'rgba(60,141,188,1)',
        //                pointHighlightFill: '#fff',
        //                pointHighlightStroke: 'rgba(60,141,188,1)',
        //                data: [28]
        //            },
        //            {
        //                label: 'Converted Lead',
        //                backgroundColor: 'rgba(105,205,250,0.7)',
        //                borderColor: 'rgba(210, 214, 222, 1)',
        //                pointRadius: false,
        //                pointColor: 'rgba(210, 214, 222, 1)',
        //                pointStrokeColor: '#c1c7d1',
        //                pointHighlightFill: '#fff',
        //                pointHighlightStroke: 'rgba(2ss20,220,220,1)',
");
                WriteLiteral(@"        //                data: [65]
        //            },
        //            {
        //                label: 'Total Leads',
        //                backgroundColor: 'rgba(105,205,250,0.7)',
        //                borderColor: '#2da44a',
        //                pointRadius: false,
        //                pointColor: '#f39c12',
        //                pointStrokeColor: '#c1c7d1',
        //                pointHighlightFill: '#fff',
        //                pointHighlightStroke: '#f39c12',
        //                data: [70]
        //            },
        //        ]
        //    }
        //    var barChartCanvas = $('#barChart').get(0).getContext('2d')
        //    var barChartData = jQuery.extend(true, {}, barChartLeadData)
        //    var temp0 = barChartLeadData.datasets[0]
        //    var temp1 = barChartLeadData.datasets[1]
        //    var temp2 = barChartLeadData.datasets[2]
        //    barChartData.datasets[0] = temp2
        //    barChartData.da");
                WriteLiteral(@"tasets[1] = temp1
        //    barChartData.datasets[2] = temp0

        //    var barChartOptions = {
        //        responsive: true,
        //        maintainAspectRatio: false,
        //        datasetFill: false
        //    }

        //    var barChart = new Chart(barChartCanvas, {
        //        type: 'bar',
        //        data: barChartData,
        //        options: barChartOptions
        //    })
        //    //---------------
        //    var barChartLeadData = {
        //        labels: ['Pending Orders'],
        //        datasets: [
        //            {
        //                label: 'Technician Name',
        //                backgroundColor: 'rgba(117,209,218,0.7)',
        //                borderColor: 'rgba(60,141,188,0.8)',
        //                pointRadius: false,
        //                pointColor: '#3b8bba',
        //                pointStrokeColor: 'rgba(60,141,188,1)',
        //                pointHighlightFill: '#fff',
   ");
                WriteLiteral(@"     //                pointHighlightStroke: 'rgba(60,141,188,1)',
        //                data: [28]
        //            },
        //            {
        //                label: 'No. OF Technician',
        //                backgroundColor: 'rgba(117,209,218,0.7)',
        //                borderColor: 'rgba(210, 214, 222, 1)',
        //                pointRadius: false,
        //                pointColor: 'rgba(210, 214, 222, 1)',
        //                pointStrokeColor: '#c1c7d1',
        //                pointHighlightFill: '#fff',
        //                pointHighlightStroke: 'rgba(220,220,220,1)',
        //                data: [65]
        //            },
        //            {
        //                label: 'Technicians on duty',
        //                backgroundColor: 'rgba(117,209,218,0.7)',
        //                borderColor: '#2da44a',
        //                pointRadius: false,
        //                pointColor: '#f39c12',
        //         ");
                WriteLiteral(@"       pointStrokeColor: '#c1c7d1',
        //                pointHighlightFill: '#fff',
        //                pointHighlightStroke: '#f39c12',
        //                data: [70]
        //            },
        //        ]
        //    }
        //    var barChartCanvas = $('#PendingOrders').get(0).getContext('2d')
        //    var barChartData = jQuery.extend(true, {}, barChartLeadData)
        //    var temp0 = barChartLeadData.datasets[0]
        //    var temp1 = barChartLeadData.datasets[1]
        //    var temp2 = barChartLeadData.datasets[2]
        //    barChartData.datasets[0] = temp2
        //    barChartData.datasets[1] = temp1
        //    barChartData.datasets[2] = temp0

        //    var barChartOptions = {
        //        scales: {
        //            yAxes: [{
        //                ticks: {
        //                    beginAtZero: true
        //                }
        //            }]
        //        },
        //        responsive: true,
");
                WriteLiteral(@"        //        maintainAspectRatio: false,
        //        datasetFill: false
        //    }

        //    var barChart = new Chart(barChartCanvas, {
        //        type: 'bar',
        //        data: barChartData,
        //        options: barChartOptions
        //    })

        //    //---------------

        //    var barChartProductData = {
        //        labels: ['Product Order'],
        //        datasets: [
        //            {
        //                label: 'Top Product',
        //                backgroundColor: 'rgba(111,205,152,0.7)',
        //                borderColor: 'rgba(210, 214, 222, 1)',
        //                pointRadius: false,
        //                pointColor: 'rgb(13, 90, 135)',
        //                pointStrokeColor: '#c1c7d1',
        //                pointHighlightFill: '#fff',
        //                pointHighlightStroke: 'rgb(13, 90, 135)',
        //                data: [50]

        //            },
        // ");
                WriteLiteral(@"           {
        //                label: 'Total Deliver',
        //                backgroundColor: 'rgba(111,205,152,0.7)',
        //                borderColor: 'rgba(210, 214, 222, 1)',
        //                pointRadius: false,
        //                pointColor: 'rgba(210, 214, 222, 1)',
        //                pointStrokeColor: '#c1c7d1',
        //                pointHighlightFill: '#fff',
        //                pointHighlightStroke: 'rgba(220,220,220,1)',
        //                data: [120]
        //            },
        //            {
        //                label: 'Total Order',
        //                backgroundColor: 'rgba(111,205,152,0.7)',
        //                borderColor: '#2da44a',
        //                pointRadius: false,
        //                pointColor: '#3b8bba',
        //                pointStrokeColor: '#f39c12',
        //                pointHighlightFill: '#fff',
        //                pointHighlightStroke: '#f39c12',
  ");
                WriteLiteral(@"      //                data: [200]
        //            },
        //        ]
        //    }
        //    var barChartCanvas2 = $('#barChart2').get(0).getContext('2d')
        //    var barChartData2 = jQuery.extend(true, {}, barChartProductData)
        //    var temp0 = barChartProductData.datasets[0]
        //    var temp1 = barChartProductData.datasets[1]
        //    var temp2 = barChartProductData.datasets[2]
        //    barChartData2.datasets[0] = temp2
        //    barChartData2.datasets[1] = temp1
        //    barChartData2.datasets[2] = temp0

        //    var barChartOptions2 = {
        //        responsive: true,
        //        maintainAspectRatio: false,
        //        datasetFill: false
        //    }

        //    var barChart2 = new Chart(barChartCanvas2, {
        //        type: 'bar',
        //        data: barChartData2,
        //        options: barChartOptions2
        //    })

        //    //----------------------------------

        ");
                WriteLiteral(@"//    var barChartTechData = {
        //        labels: ['Tecnician'],
        //        datasets: [
        //            {
        //                label: 'Job Failed',
        //                backgroundColor: 'rgba(111,205,152,0.7)',
        //                borderColor: 'rgba(210, 214, 222, 1)',
        //                pointRadius: false,
        //                pointColor: 'rgb(13, 90, 135)',
        //                pointStrokeColor: '#c1c7d1',
        //                pointHighlightFill: '#fff',
        //                pointHighlightStroke: 'rgb(13, 90, 135)',
        //                data: [25]
        //            },
        //            {
        //                label: 'Late Job',
        //                backgroundColor: 'rgba(111,205,152,0.7)',
        //                borderColor: 'rgba(210, 214, 222, 1)',
        //                pointRadius: false,
        //                pointColor: 'rgba(210, 214, 222, 1)',
        //                pointStrokeColor:");
                WriteLiteral(@" '#c1c7d1',
        //                pointHighlightFill: '#fff',
        //                pointHighlightStroke: 'rgba(220,220,220,1)',
        //                data: [30]
        //            },
        //            {
        //                label: 'Complete Job',
        //                backgroundColor: 'rgba(111,205,152,0.7)',
        //                borderColor: '#2da44a',
        //                pointRadius: false,
        //                pointColor: '#3b8bba',
        //                pointStrokeColor: '#f39c12',
        //                pointHighlightFill: '#fff',
        //                pointHighlightStroke: '#f39c12',
        //                data: [100]


        //            },
        //        ]
        //    }
        //    var barChartCanvas3 = $('#tech').get(0).getContext('2d')
        //    var barChartData3 = jQuery.extend(true, {}, barChartTechData)
        //    var temp0 = barChartTechData.datasets[0]
        //    var temp1 = barChartTechData.da");
                WriteLiteral(@"tasets[1]
        //    var temp2 = barChartTechData.datasets[2]
        //    barChartData3.datasets[0] = temp2
        //    barChartData3.datasets[1] = temp1
        //    barChartData3.datasets[2] = temp0

        //    var barChartOptions3 = {
        //        responsive: true,
        //        maintainAspectRatio: false,
        //        datasetFill: false
        //    }

        //    var barChart2 = new Chart(barChartCanvas3, {
        //        type: 'bar',
        //        data: barChartData3,
        //        options: barChartOptions3
        //    })
        //})
    </script>

");
            }
            );
            WriteLiteral(@"

<section class=""content-header"">
    <div class=""container-fluid"">
        <div class=""row mb-2"">
            <div class=""col-md-6"">
                <h1>Dashboard</h1>
            </div>



            <div class=""col-md-6"">
                <div class=""input-group float-right"" style=""width:200px;"">
                    <button type=""button"" class=""btn btn-default form-control"" id=""daterange-btn"">
                        <i class=""far fa-calendar-alt""></i> Date range picker
                        <i class=""fas fa-caret-down""></i>
                    </button>
                </div>
            </div>
        </div>
    </div>
</section>
<section class=""content"">
    <div class=""container-fluid"" id=""Analytics-dashboard-content"">
        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("partial", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "6b98de06a146c15d414d5acd793e993f90bcc5a316940", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper.Name = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
#nullable restore
#line 317 "C:\Users\Zahid\source\repos\CarGuru\CarGuru\Views\Agent\Dashboard.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper.Model = Model;

#line default
#line hidden
#nullable disable
            __tagHelperExecutionContext.AddTagHelperAttribute("model", __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper.Model, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"        
    </div>
</section>
<script>
    function ApplyAnalyticsFilter(startDate, endDate) {
        
            $.ajax({
                type: ""POST"",
                url: '../Agent/DashboardAnalyticsFilter',
                data: { startDate: startDate ,endDate:endDate},
                success: function (data) {
                    $(""#Analytics-dashboard-content"").html(data);
                },
                error: function (res) {
                    AjaxFailure(res);
                }
            });
}
</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public CarGuru.Services.Interfaces.ISessionManager x { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
