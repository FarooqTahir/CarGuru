#pragma checksum "C:\Users\Zahid\source\repos\CarGuru\CarGuru\Views\Management\Scheduler.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b4d2ece4049e5ae2a52ac1977630783330e20c9c"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Management_Scheduler), @"mvc.1.0.view", @"/Views/Management/Scheduler.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Zahid\source\repos\CarGuru\CarGuru\Views\_ViewImports.cshtml"
using CarGuru;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Zahid\source\repos\CarGuru\CarGuru\Views\_ViewImports.cshtml"
using CarGuru.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b4d2ece4049e5ae2a52ac1977630783330e20c9c", @"/Views/Management/Scheduler.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4e6a444c5013a2caa2b0f73ecf9ecf67a7be6ad3", @"/Views/_ViewImports.cshtml")]
    public class Views_Management_Scheduler : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "C:\Users\Zahid\source\repos\CarGuru\CarGuru\Views\Management\Scheduler.cshtml"
  
    ViewData["Title"] = "FullCalendar";
    Layout = CommonData.GetUserLayoutByRoleId(x.GetUserRoleId());//"~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
    <script>
        $(document).ready(function () {
            $('.customerName').editableSelect();
            $('.nearestTechnician').editableSelect();
            GetCalander();
        });
        function GetCalander() {
            $('#calendar').fullCalendar({
                header: {
                    left: 'title',
                    center: '',
                    right: 'prev,next today,month,agendaWeek,agendaDay'
                },
                defaultView: 'month',
                navLinks: false, // can click day/week names to navigate views
                selectable: false,
                selectHelper: false,
                displayEventTime: false,
                displayEventEnd: false,
                eventStartEditable: false,
                weekends: true,
                views: {
                    agendaWeek: {
                        displayEventEnd: false // adjust to 6 only for agendaWeek/agendaDay
                    },
                    mont");
                WriteLiteral(@"h: {
                        titleFormat: ""MMMM YYYY"",
                    },
                    week: {
                        columnFormat: ""ddd DD/MM"",
                    },
                    day: {
                        titleFormat: ""dddd DD MMMM YYYY"",
                        columnFormat: ""dddd DD/MM"",
                    }
                },
                editable: true,
                eventLimit: true, // allow ""more"" link when too many events
                events: function (start, end, timezone, callback) {
                    $.ajax({
                        url: ""../Supervisor/GetAllServiceOrders"",
                        type: 'GET',
                        success: function (eventInfo) {
                            data = eventInfo;
                            var events = [];
                            $.each(data,
                                function (index, data) {
                                    var orderId = data.id;
                               ");
                WriteLiteral(@"     var status = data.invoiceStatus;
                                    var serviceOrderNo = data.serviceOrderNo;
                                    var receivedDate = moment(data.receivedDate).format('YYYY-MM-DD');
                                    var source = data.source;
                                    var scheduleDateTime = moment(data.scheduleDateTime).format('YYYY-MM-DD');
                                    var technician = data.technician;
                                    var vehicleMake = data.vehicleMake;
                                    var vehicleModel = data.vehicleModel;
                                    var vehicleYear = data.vehicleYear;
                                    var totalPrice = data.totalPrice;
                                    var technician = data.technician;
                                    var customerName = data.customerName;
                                    var agent = data.agent;
                                    var CustomerPhone = d");
                WriteLiteral(@"ata.customerPhone;
                                    var CustomerEmail = data.customerEmail;
                                    var InvoiceStatus = data.invoiceStatus;
                                    
                                    if (status == ""Pending"") {
                                        eventObjBgColor = ""#ff6c52"";
                                    }
                                    if (status == ""Completed"") {
                                        eventObjBgColor = ""#28a745"";
                                    }
                                    if (status == ""In Progress"") {
                                        eventObjBgColor = ""#ffcc00"";
                                    }
                                    eventDetail = """";
                                    eventTitle = serviceOrderNo + ""-"" + status + ""-"" + customerName;
                                    events.push({
                                        title: eventTitle,
                   ");
                WriteLiteral(@"                     start: scheduleDateTime,
                                        end: scheduleDateTime,
                                        backgroundColor: eventObjBgColor,
                                        borderColor: ""#ffffff"",
                                        textColor: ""#ffffff"",
                                        Id: orderId,
                                        EventTitle: eventTitle,
                                        Date: scheduleDateTime,
                                        fontSize: ""12px"",
                                        Description: eventDetail,
                                        StartDate: scheduleDateTime,
                                        EndDate: scheduleDateTime,
                                        Technician: technician,
                                        TotalPrice: totalPrice,
                                        VehicleMake: vehicleMake,
                                        VehicleModel: vehicleMode");
                WriteLiteral(@"l,
                                        VehicleYear: vehicleYear,
                                        Agent: agent,
                                        Phone: CustomerPhone,
                                        Email: CustomerEmail,
                                        Customer: customerName,
                                        Status: InvoiceStatus,
                                        allDay: true
                                    });
                                });
                            callback(events);
                        }
                    });
                },
                textColor: '#ffffff',
                eventClick: function (slot, jsEvent, view) {
                    $(""#IStatus"").text(slot.Status);
                    $(""#ITotalPrice"").text(slot.TotalPrice);
                    $(""#ICustomerPhone"").text(slot.Phone);
                    $(""#ICustomerEmail"").text(slot.Email);
                    $(""#ITitle"").text(slot.title);
   ");
                WriteLiteral(@"                 $(""#ITechnician"").text(slot.Technician);
                    $(""#IVehicle"").text(slot.VehicleMake + ""-"" + slot.VehicleModel + ""-"" + slot.VehicleYear);
                    $(""#ITotal"").text(slot.TotalPrice);
                    $(""#IAgent"").text(slot.Agent);
                    $(""#ICustomer"").text(slot.Customer);
                    $(""#modalEvent"").modal(""show"");
                }
            });
        }
    </script>
");
            }
            );
            WriteLiteral(@"<section class=""content-header"">
    <div class=""container-fluid"">
        <div class=""row mb-2"">
            <div class=""col-sm-6"">
                <h1>Appointment Schedule</h1>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>
<section class=""content"">
    <div class=""container-fluid"">
        <div class=""row"">
            <!-- /.col -->
            <div class=""col-md-12"">
                <div class=""card card-primary"">
                    <div class=""card-body p-0"">
                        <!-- THE CALENDAR -->
                        <div id=""calendar""></div>
                    </div>
                    <!-- /.card-body -->
                </div>
                <!-- /.card -->
            </div>
            <!-- /.col -->
        </div>
        <!-- /.row -->
    </div><!-- /.container-fluid -->
</section>
<div class=""modal fade"" id=""modalEvent"">
    <div class=""modal-dialog modal-lg"">
        <div class=""modal-content"">
            <div cl");
            WriteLiteral(@"ass=""modal-header bg-colorBlack"">
                <h4 class=""modal-title"" id=""ITitle"">Appointment</h4>
                <button type=""button"" class=""close text-white"" data-dismiss=""modal"" aria-label=""Close"">
                    <span aria-hidden=""true"">&times;</span>
                </button>
            </div>
            <div class=""modal-body"">
                <div class=""row"">
                    <div class=""col-md-4"">
                        <address>
                            <strong>Billed To:</strong><br>
                            <span id=""ICustomer""></span><br>
                            <strong>Customer Phone:</strong><br>
                            <span id=""ICustomerPhone""></span><br>
                            <strong>Customer Email:</strong><br>
                            <span id=""ICustomerEmail""></span><br>
                        </address>
                    </div>
                    <div class=""col-md-4"">
                        <address>
                      ");
            WriteLiteral(@"      <strong>Agent:</strong><br>
                            <span id=""IAgent""></span><br>
                            <strong>Technician:</strong><br>
                            <span id=""ITechnician""></span><br>
                            <strong>Vehicle:</strong><br>
                            <span id=""IVehicle""></span><br>
                        </address>
                    </div>
                    <div class=""col-md-4"">
                        <address>
                            <strong>Status:</strong><br>
                            <span id=""IStatus""></span><br>
                            <strong>Total:</strong><br>
                            <span id=""ITotal""></span><br>
                        </address>
                    </div>
                </div>
            </div>
            <div class=""modal-footer "">
                <button type=""button"" class=""btn btn-secondary float-right"" data-dismiss=""modal"">Close</button>
                <button type=""button"" class=""");
            WriteLiteral("btn btn-secondary float-left\" data-dismiss=\"modal\">OK</button>\r\n            </div>\r\n        </div>\r\n        <!-- /.modal-content -->\r\n    </div>\r\n    <!-- /.modal-dialog -->\r\n</div>\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public CarGuru.Services.Interfaces.ISessionManager x { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
